name = "pmanagement"
main = "out/main.js"
compatibility_date = "2025-02-04"
compatibility_flags = ["nodejs_compat"]
#assets = { directory = "./public", binding = "ASSETS" }

# For local development, use existing DB config
[env.development]
vars = { NODE_ENV = "development" }

# Production with D1 database
[env.production]
vars = { NODE_ENV = "production" }
# Bind the D1 database to the Worker
[[env.production.d1_databases]]
binding = "DB" # available in production as env.DB
database_name = "landlord-db"
database_id = "${DATABASE_ID}" # will be filled via GitHub Actions
migrations_dir = "migrations/d1" # Directory where the migration SQL files are stored
migrations_table = "drizzle_migrations" # Table to track migrations

[observability.logs]
enabled = true

# Configure static asset handling
#[site]
#bucket = "./public"

# Asset configuration
[env.production.site]
bucket = "./dist"
include = ["**/*"]  # Include all files from the bucket

# Static content binding via KV namespace (__STATIC_CONTENT is a special binding name)
# In Cloudflare, this maps to the KV namespace: __STATIC_CONTENT
# This is managed automatically by Cloudflare Workers

# For backward compatibility, also define the ASSETS binding
# This allows our code to work with both binding types
[[env.production.bindings]]
name = "ASSETS"
type = "site"

# Define routes for the SPA
[[env.production.routes]]
pattern = "immo.busqandote.com"
custom_domain = true